{"version":3,"sources":["Main.js","About.js","ChartResult.js","Loading.js","Results.js","App.js","index.js"],"names":["Main","result","setData","setCheck","check","useState","query","setQuery","history","useHistory","callApi","a","length","fetch","res","text","resText","JSON","parse","json","alert","handleSubmit","e","undefined","trim","split","map","toUpperCase","substring","join","console","log","preventDefault","push","motion","div","initial","opacity","y","animate","exit","class","onSubmit","type","placeholder","value","onChange","target","to","src","onClick","alt","About","href","ChartResult","polarities","Object","entries","Component","NewDoughnut","Doughnut","props","className","style","position","height","width","reduce","b","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","legend","display","maintainAspectRatio","Loading","Results","showChart","setShowChart","useEffect","setTimeout","App","isMounted","setMounted","AnimatePresence","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc77dbe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction Main({ result, setData, check, setCheck }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const callApi = async () => {\r\n    if (query.length >= 1) {\r\n      const res = await fetch(\"https://analysis.abdulrcs.repl.co/api/\" + query);\r\n      const resText = await res.text();\r\n      const json = await JSON.parse(resText);\r\n      await setData(json);\r\n    } else {\r\n      alert(\"Type your query before submitting!\");\r\n    }\r\n  };\r\n\r\n  const upperWord = (word) => {\r\n    let splitted = word.trim().split(\" \");\r\n    let upperCase = splitted.map((e) => e[0].toUpperCase() + e.substring(1));\r\n    return upperCase.join(\" \");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if (query !== undefined) setCheck(upperWord(query));\r\n    callApi();\r\n    console.log(result);\r\n    e.preventDefault();\r\n    history.push(\"/result\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: \"30%\" }}\r\n        animate={{ opacity: 1, y: \"0\" }}\r\n        exit={{ opacity: 0, y: \"30%\" }}\r\n      >\r\n        <main>\r\n          <div class=\"section1\">\r\n            <h1>Opiniometer</h1>\r\n            <p>\r\n              <span class=\"mobileText\">\r\n                Analyze an opinion on specific <br /> topic based on twitter\r\n                posts!\r\n              </span>\r\n              <span class=\"desktopText\">\r\n                Analyze an opinion on specific topic <br /> based on twitter\r\n                posts!\r\n              </span>\r\n            </p>\r\n            <form class=\"form\" onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Insert a Topic\"\r\n                value={query}\r\n                onChange={handleChange}\r\n              ></input>\r\n              <Link to=\"/result\">\r\n                <img\r\n                  src=\"./assets/submit.svg\"\r\n                  onClick={handleSubmit}\r\n                  alt=\"Submit\"\r\n                />\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </main>\r\n      </motion.div>\r\n\r\n      <footer>\r\n        <Link to=\"/about\">\r\n          <p class=\"detail\">How it Works?</p>\r\n        </Link>\r\n        <div class=\"name\">\r\n          <img src=\"./assets/github.svg\" />\r\n          <p>abdulrcs</p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <motion.div\r\n        class=\"about\"\r\n        initial={{ opacity: 0, y: \"30%\" }}\r\n        animate={{ opacity: 1, y: \"0\" }}\r\n        exit={{ opacity: 0, y: \"30%\" }}\r\n      >\r\n        <h1>How it Works?</h1>\r\n        <p>\r\n          It is possible using Natural Language Processing (NLP) concept called\r\n          <a\r\n            href=\"https://en.wikipedia.org/wiki/Sentiment_analysis\"\r\n            target=\"_blank\"\r\n          >\r\n            &nbsp;Sentiment Analysis&nbsp;\r\n          </a>\r\n          that can determine if a chunk of text is positive, negative, or\r\n          neutral based on its polarity.\r\n        </p>\r\n      </motion.div>\r\n      <footer>\r\n        <Link to=\"/\">\r\n          <div class=\"name\">\r\n            <p class=\"detail\">⬅️ Back</p>\r\n          </div>\r\n        </Link>\r\n        <div class=\"name\">\r\n          <img src=\"assets/github.svg\" />\r\n          <p>abdulrcs</p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { Doughnut } from \"react-chartjs-2\";\r\n\r\nexport default function ChartResult({ result }) {\r\n  let polarities = [0, 0, 0, 0, 0, 0, 0];\r\n  if (result[\"polarity\"] != null)\r\n    polarities = Object.entries(result[\"polarity\"]).map((e) => e[1]);\r\n  function withChartSizeControl(Component) {\r\n    return (props) => (\r\n      <div\r\n        className=\"chart\"\r\n        style={{\r\n          position: \"relative\",\r\n          height: props.height + \"vh\",\r\n          width: props.width + \"vw\",\r\n        }}\r\n      >\r\n        <Component {...props} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const NewDoughnut = withChartSizeControl(Doughnut);\r\n\r\n  function sum(arr) {\r\n    return arr.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  return sum(polarities) > 0 ? (\r\n    <NewDoughnut\r\n      data={{\r\n        labels: [\r\n          \"Strongly Positive\",\r\n          \"Positive\",\r\n          \"Weakly Positive\",\r\n          \"Strongly Negative\",\r\n          \"Negative\",\r\n          \"Weakly Negative\",\r\n          \"Neutral\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            data: polarities,\r\n            backgroundColor: [\r\n              \"forestgreen\",\r\n              \"limegreen\",\r\n              \"lightgreen\",\r\n              \"indianred\",\r\n              \"lightcoral\",\r\n              \"lightpink\",\r\n              \"#707072\",\r\n            ],\r\n            borderColor: \"white\",\r\n            borderWidth: 4,\r\n          },\r\n        ],\r\n      }}\r\n      width={80}\r\n      height={50}\r\n      options={{\r\n        legend: { display: false },\r\n        maintainAspectRatio: false,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div class=\"notenough\">\r\n      <h2>Not enough tweets &#128557;</h2>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles/App.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div class=\"lds-grid\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport ChartResult from \"./ChartResult\";\r\nimport Loading from \"./Loading\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction Results({ result, check }) {\r\n  const [showChart, setShowChart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setShowChart(true);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {showChart ? (\r\n        <motion.div\r\n          class=\"result\"\r\n          initial={{ opacity: 0, y: \"30%\" }}\r\n          animate={{ opacity: 1, y: \"0\" }}\r\n          exit={{ opacity: 0, y: \"30%\" }}\r\n        >\r\n          <div class=\"resultheader\">\r\n            <h1>Opiniometer</h1>\r\n            <p>\r\n              Here's what the people think about <br />\r\n              {check.length > 25 ? \"that topic\" : check}\r\n            </p>\r\n          </div>\r\n          <ChartResult result={result} />\r\n          <Link to=\"/\">\r\n            <div class=\"back\">\r\n              <p>Try Another Topic</p>\r\n            </div>\r\n          </Link>\r\n        </motion.div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      <footer>\r\n        <div class=\"name\">\r\n          <img src=\"./assets/github.svg\" />\r\n          <p>abdulrcs</p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Main from \"./Main\";\r\nimport About from \"./About\";\r\nimport Results from \"./Results\";\r\nimport Loading from \"./Loading\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [isMounted, setMounted] = useState(false);\r\n  const [result, setData] = useState({});\r\n  const [check, setCheck] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setMounted(true), 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div class=\"parent\">\r\n        <AnimatePresence>\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={\r\n                isMounted\r\n                  ? () => (\r\n                      <Main\r\n                        result={result}\r\n                        setData={setData}\r\n                        check={check}\r\n                        setCheck={setCheck}\r\n                      />\r\n                    )\r\n                  : Loading\r\n              }\r\n            />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route\r\n              path=\"/result\"\r\n              component={() => <Results result={result} check={check} />}\r\n            />\r\n          </Switch>\r\n        </AnimatePresence>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}